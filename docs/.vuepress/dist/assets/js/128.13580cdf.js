(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{559:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("code",[t._v("LLM Chains")]),t._v("（LLM 链）是 LangChain 框架中的一个重要组件，它允许你将多个步骤串联在一起，每个步骤使用语言模型（LLM）来处理数据。这使得你能够创建多步推理的工作流，处理复杂的任务。通过 LLM Chains，你可以将多个提示语（Prompt）和推理步骤连接起来，最终产生一个期望的输出。")]),t._v(" "),a("h3",{attrs:{id:"_1-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[t._v("#")]),t._v(" 1. "),a("strong",[t._v("基本概念")])]),t._v(" "),a("p",[t._v("LLM Chain 是一个“链式”的结构，通常由以下几个部分组成：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("输入变量")]),t._v("：链的开始部分，通常由用户输入或其他系统组件提供的参数组成。")]),t._v(" "),a("li",[a("strong",[t._v("提示模板（PromptTemplate）")]),t._v("：在 LLM Chain 中，提示模板用于定义如何根据输入数据构建提示语（Prompt）。模板可以包含动态插入的变量。")]),t._v(" "),a("li",[a("strong",[t._v("LLM（Language Model）")]),t._v("：链中的处理器，负责根据输入的提示生成相应的输出。")]),t._v(" "),a("li",[a("strong",[t._v("输出")]),t._v("：最终由 LLM Chain 生成的答案或结果。")])]),t._v(" "),a("p",[t._v("通过 LLM Chain，你可以让语言模型执行一系列任务，且每个步骤的输出都可以作为下一个步骤的输入，从而实现复杂的逻辑和推理。")]),t._v(" "),a("h3",{attrs:{id:"_2-创建一个基本的-llm-chain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建一个基本的-llm-chain"}},[t._v("#")]),t._v(" 2. "),a("strong",[t._v("创建一个基本的 LLM Chain")])]),t._v(" "),a("p",[t._v("以下是使用 LangChain 创建一个最简单的 LLM Chain 示例，假设我们的任务是将英语句子翻译成法语。")]),t._v(" "),a("h4",{attrs:{id:"步骤-1-导入必要的库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-导入必要的库"}},[t._v("#")]),t._v(" 步骤 1：导入必要的库")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prompts "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PromptTemplate\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("llms "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OpenAI\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chains "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" LLMChain\n")])])]),a("h4",{attrs:{id:"步骤-2-创建提示模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-创建提示模板"}},[t._v("#")]),t._v(" 步骤 2：创建提示模板")]),t._v(" "),a("p",[t._v("提示模板用于定义输入与输出之间的关系。例如，我们定义一个英语到法语的翻译模板。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义模板")]),t._v("\ntemplate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Translate the following English sentence to French: {text}"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建提示模板对象")]),t._v("\nprompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PromptTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_variables"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-3-选择语言模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-选择语言模型"}},[t._v("#")]),t._v(" 步骤 3：选择语言模型")]),t._v(" "),a("p",[t._v("在这个示例中，我们使用 OpenAI 的 GPT-3 作为语言模型。你可以根据需要选择其他 LLM。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置语言模型（这里以 OpenAI 的 GPT-3 为例）")]),t._v("\nllm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temperature"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-4-创建-llmchain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-4-创建-llmchain"}},[t._v("#")]),t._v(" 步骤 4：创建 LLMChain")]),t._v(" "),a("p",[t._v("将提示模板和语言模型结合成一个 LLMChain。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建 LLMChain")]),t._v("\nllm_chain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LLMChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" llm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-5-运行链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-5-运行链"}},[t._v("#")]),t._v(" 步骤 5：运行链")]),t._v(" "),a("p",[t._v("执行 LLMChain，将输入传递给模型，获取结果。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入的英语句子")]),t._v("\ntext_to_translate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, how are you?"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 LLMChain 进行翻译")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" llm_chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text_to_translate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出结果")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[t._v("#")]),t._v(" 输出：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Bonjour, comment ça va?\n")])])]),a("h3",{attrs:{id:"_3-多步推理的-llm-chain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-多步推理的-llm-chain"}},[t._v("#")]),t._v(" 3. "),a("strong",[t._v("多步推理的 LLM Chain")])]),t._v(" "),a("p",[t._v("LLM Chain 不仅限于简单的任务，也可以构建复杂的多步推理任务。在实际应用中，可能需要结合多个模型步骤来生成最终的结果。以下是一个多步推理的例子，假设我们需要通过多个步骤来生成一个总结。")]),t._v(" "),a("h4",{attrs:{id:"步骤-1-定义模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-定义模板"}},[t._v("#")]),t._v(" 步骤 1：定义模板")]),t._v(" "),a("p",[t._v("我们可以通过两步处理：首先让模型分析一个文本，然后生成总结。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 步骤 1：分析文本")]),t._v("\nanalysis_template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Analyze the following text and identify the main points: {text}"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 步骤 2：生成总结")]),t._v("\nsummary_template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Summarize the main points from the analysis: {analysis}"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建提示模板对象")]),t._v("\nanalysis_prompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PromptTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_variables"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("analysis_template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsummary_prompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PromptTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_variables"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analysis"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("summary_template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-2-设置模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-设置模型"}},[t._v("#")]),t._v(" 步骤 2：设置模型")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("llm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temperature"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-3-创建-llm-chains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-创建-llm-chains"}},[t._v("#")]),t._v(" 步骤 3：创建 LLM Chains")]),t._v(" "),a("p",[t._v("在多步推理中，我们创建多个 LLMChain，分别处理每个步骤。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建分析链")]),t._v("\nanalysis_chain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LLMChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("analysis_prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" llm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建总结链")]),t._v("\nsummary_chain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LLMChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("summary_prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" llm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-4-组合链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-4-组合链"}},[t._v("#")]),t._v(" 步骤 4：组合链")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("LLMChain")]),t._v(" 来将分析步骤和总结步骤串联起来。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入的文本")]),t._v("\ninput_text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LangChain is a framework designed to help developers create applications with language models. It simplifies tasks such as prompting, multi-step reasoning, and integrating external data sources."')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先进行分析")]),t._v("\nanalysis_result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" analysis_chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于分析结果生成总结")]),t._v("\nfinal_summary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" summary_chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("analysis_result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出最终总结")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("final_summary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-复杂任务的分层-llm-chain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-复杂任务的分层-llm-chain"}},[t._v("#")]),t._v(" 4. "),a("strong",[t._v("复杂任务的分层 LLM Chain")])]),t._v(" "),a("p",[t._v("有时，一个任务可能需要更复杂的多层链式调用。你可以将多个链嵌套在一起，形成一个分层结构。例如，在一个数据分析应用中，模型可能需要逐步提取数据、分析并生成报告。")]),t._v(" "),a("h4",{attrs:{id:"步骤-1-设置链和模板"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-设置链和模板"}},[t._v("#")]),t._v(" 步骤 1：设置链和模板")]),t._v(" "),a("p",[t._v("假设我们需要从文档中提取信息并生成报告。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提取信息的模板")]),t._v("\ninfo_extraction_template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Extract the key data from the following text: {text}"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分析和生成报告的模板")]),t._v("\nreport_generation_template "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Generate a report based on the following extracted information: {extracted_info}"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建提示模板")]),t._v("\ninfo_extraction_prompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PromptTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_variables"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("info_extraction_template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nreport_generation_prompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PromptTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_variables"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extracted_info"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("report_generation_template"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-2-创建多个-llm-chains"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-创建多个-llm-chains"}},[t._v("#")]),t._v(" 步骤 2：创建多个 LLM Chains")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建信息提取链")]),t._v("\ninfo_extraction_chain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LLMChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("info_extraction_prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" llm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建报告生成链")]),t._v("\nreport_generation_chain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LLMChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("report_generation_prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" llm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"步骤-3-执行链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-执行链"}},[t._v("#")]),t._v(" 步骤 3：执行链")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输入文本")]),t._v("\ninput_text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The company reported a 10% increase in sales for Q1. Additionally, customer satisfaction improved by 5%."')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行信息提取")]),t._v("\nextracted_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" info_extraction_chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成报告")]),t._v("\nfinal_report "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" report_generation_chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extracted_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出报告")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("final_report"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_5-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结"}},[t._v("#")]),t._v(" 5. "),a("strong",[t._v("总结")])]),t._v(" "),a("p",[t._v("通过 LangChain 中的 "),a("code",[t._v("LLM Chains")]),t._v("，你可以将多个处理步骤组合成一个复杂的流程，适用于需要多步推理、文本分析、报告生成等任务。使用链的优点包括：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("简化复杂流程")]),t._v("：可以将多个操作（如分析、翻译、总结等）串联起来，形成清晰的工作流。")]),t._v(" "),a("li",[a("strong",[t._v("灵活性和扩展性")]),t._v("：你可以根据需求轻松添加更多步骤，或者通过修改模板来调整任务。")]),t._v(" "),a("li",[a("strong",[t._v("多步推理")]),t._v("：通过链式调用，可以处理需要逐步推理或多层处理的任务，例如复杂问题求解和生成长文本等。")])]),t._v(" "),a("p",[t._v("LangChain 提供了强大的支持来简化多步骤任务的开发，提升开发效率并扩展应用的功能。")])])}),[],!1,null,null,null);a.default=r.exports}}]);