(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{659:function(_,r,o){"use strict";o.r(r);var v=o(2),e=Object(v.a)({},(function(){var _=this,r=_._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[r("p",[_._v("Docker的基本使用命令可以帮助你快速了解和操作Docker容器和镜像。以下是一些常用的Docker命令：")]),_._v(" "),r("h3",{attrs:{id:"_1-docker-基本命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-基本命令"}},[_._v("#")]),_._v(" 1. Docker 基本命令")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker version")]),_._v("：查看Docker版本信息。")]),_._v(" "),r("li",[r("strong",[_._v("docker info")]),_._v("：查看Docker系统的信息，包括镜像和容器数量等。")])]),_._v(" "),r("h3",{attrs:{id:"_2-镜像管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-镜像管理"}},[_._v("#")]),_._v(" 2. 镜像管理")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker images")]),_._v("：查看本地所有的Docker镜像。")]),_._v(" "),r("li",[r("strong",[_._v("docker pull [镜像名]")]),_._v("：从Docker Hub上下载镜像，例如"),r("code",[_._v("docker pull nginx")]),_._v("。")]),_._v(" "),r("li",[r("strong",[_._v("docker rmi [镜像ID]")]),_._v("：删除本地镜像。")]),_._v(" "),r("li",[r("strong",[_._v("docker build -t [镜像名:标签] .")]),_._v("：在当前目录根据Dockerfile构建镜像。")])]),_._v(" "),r("h3",{attrs:{id:"_3-容器管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器管理"}},[_._v("#")]),_._v(" 3. 容器管理")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker ps")]),_._v("：列出当前正在运行的容器。")]),_._v(" "),r("li",[r("strong",[_._v("docker ps -a")]),_._v("：列出所有容器，包括已停止的容器。")]),_._v(" "),r("li",[r("strong",[_._v("docker run -it --name [容器名] [镜像名]")]),_._v("：运行容器，例如"),r("code",[_._v("docker run -it --name mynginx nginx")]),_._v("。\n"),r("ul",[r("li",[r("code",[_._v("-d")]),_._v("：后台运行容器。")]),_._v(" "),r("li",[r("code",[_._v("-p [主机端口]:[容器端口]")]),_._v("：端口映射，例如"),r("code",[_._v("-p 8080:80")]),_._v("。")]),_._v(" "),r("li",[r("code",[_._v("-v [主机目录]:[容器目录]")]),_._v("：挂载目录。")]),_._v(" "),r("li",[r("code",[_._v("--name")]),_._v("：为容器指定一个名称。")])])]),_._v(" "),r("li",[r("strong",[_._v("docker stop [容器ID]")]),_._v("：停止一个正在运行的容器。")]),_._v(" "),r("li",[r("strong",[_._v("docker start [容器ID]")]),_._v("：启动一个已停止的容器。")]),_._v(" "),r("li",[r("strong",[_._v("docker restart [容器ID]")]),_._v("：重启一个容器。")]),_._v(" "),r("li",[r("strong",[_._v("docker rm [容器ID]")]),_._v("：删除一个容器（容器必须已停止）。")])]),_._v(" "),r("h3",{attrs:{id:"_4-进入容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-进入容器"}},[_._v("#")]),_._v(" 4. 进入容器")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker exec -it [容器ID] /bin/bash")]),_._v("：进入一个正在运行的容器内部，通常用于调试。")]),_._v(" "),r("li",[r("strong",[_._v("docker attach [容器ID]")]),_._v("：附加到一个正在运行的容器。")])]),_._v(" "),r("h3",{attrs:{id:"_5-数据卷管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-数据卷管理"}},[_._v("#")]),_._v(" 5. 数据卷管理")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker volume create [卷名]")]),_._v("：创建一个数据卷。")]),_._v(" "),r("li",[r("strong",[_._v("docker volume ls")]),_._v("：列出所有的数据卷。")]),_._v(" "),r("li",[r("strong",[_._v("docker volume rm [卷名]")]),_._v("：删除一个数据卷。")])]),_._v(" "),r("h3",{attrs:{id:"_6-网络管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-网络管理"}},[_._v("#")]),_._v(" 6. 网络管理")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker network ls")]),_._v("：列出Docker网络。")]),_._v(" "),r("li",[r("strong",[_._v("docker network create [网络名]")]),_._v("：创建一个新的网络。")]),_._v(" "),r("li",[r("strong",[_._v("docker network rm [网络名]")]),_._v("：删除一个网络。")])]),_._v(" "),r("h3",{attrs:{id:"_7-docker-compose"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-docker-compose"}},[_._v("#")]),_._v(" 7. Docker Compose")]),_._v(" "),r("ul",[r("li",[r("strong",[_._v("docker-compose up")]),_._v("：启动"),r("code",[_._v("docker-compose.yml")]),_._v("文件中定义的应用。")]),_._v(" "),r("li",[r("strong",[_._v("docker-compose down")]),_._v("：停止并删除"),r("code",[_._v("docker-compose")]),_._v("启动的容器。")]),_._v(" "),r("li",[r("strong",[_._v("docker-compose ps")]),_._v("：查看"),r("code",[_._v("docker-compose")]),_._v("管理的容器状态。")])]),_._v(" "),r("p",[_._v("这些命令可以帮助你有效地管理Docker镜像、容器、网络和数据卷。在实际应用中可以根据需要灵活组合使用。")])])}),[],!1,null,null,null);r.default=e.exports}}]);