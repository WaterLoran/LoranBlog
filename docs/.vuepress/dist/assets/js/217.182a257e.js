(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{653:function(a,t,v){"use strict";v.r(t);var s=v(2),_=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("好的，我将为你整理一遍如何在 Linux 后台查看 Java 应用使用的 Tomcat 线程的步骤，帮助你全面地了解和监控 Java 应用程序中涉及 Tomcat 的所有线程，尤其是它们的状态和锁的使用情况。")]),a._v(" "),t("h3",{attrs:{id:"_1-获取-java-进程的-pid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取-java-进程的-pid"}},[a._v("#")]),a._v(" 1. 获取 Java 进程的 PID")]),a._v(" "),t("p",[a._v("首先，你需要知道 Tomcat 所在 Java 进程的 PID。使用以下命令获取当前运行的 Java 应用进程 ID：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ef")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v("\n")])])]),t("ul",[t("li",[a._v("找到运行的 Java 应用程序的行，通常它会显示运行 "),t("code",[a._v("java -jar ...")]),a._v(" 或 Tomcat 启动命令。")]),a._v(" "),t("li",[a._v("记下对应的进程 ID (PID)，例如假设 PID 是 "),t("code",[a._v("7")]),a._v("。")])]),a._v(" "),t("h3",{attrs:{id:"_2-使用-ps-查看-tomcat-线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-ps-查看-tomcat-线程"}},[a._v("#")]),a._v(" 2. 使用 "),t("code",[a._v("ps")]),a._v(" 查看 Tomcat 线程")]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("ps")]),a._v(" 命令可以查看 Tomcat 的所有线程：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-T")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("-T")]),a._v(" 参数会列出指定进程中的所有线程。")]),a._v(" "),t("li",[a._v("其中，"),t("code",[a._v("SPID")]),a._v(" 列表示线程 ID，每一行代表一个线程。")]),a._v(" "),t("li",[a._v("在输出中，你可以看到与 Tomcat 相关的线程，包括 "),t("code",[a._v("http-nio")]),a._v(" 相关的线程，它们负责处理 HTTP 请求。")])]),a._v(" "),t("h3",{attrs:{id:"_3-使用-top-查看线程的资源使用情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-top-查看线程的资源使用情况"}},[a._v("#")]),a._v(" 3. 使用 "),t("code",[a._v("top")]),a._v(" 查看线程的资源使用情况")]),a._v(" "),t("p",[t("code",[a._v("top")]),a._v(" 命令可以实时查看进程及其线程的资源使用情况，特别是 CPU 和内存的使用：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("top")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Hp")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("\n")])])]),t("ul",[t("li",[t("code",[a._v("-H")]),a._v(" 选项表示显示线程。")]),a._v(" "),t("li",[t("code",[a._v("-p 7")]),a._v(" 指定了 PID 为 "),t("code",[a._v("7")]),a._v(" 的 Java 进程。")]),a._v(" "),t("li",[a._v("这样可以看到 Java 进程的所有线程，以及每个线程的 CPU 使用情况。")]),a._v(" "),t("li",[t("code",[a._v("SPID")]),a._v(" 列表示线程的 ID，可以用来进一步分析每个线程的活动状态。")])]),a._v(" "),t("h3",{attrs:{id:"_4-使用-jstack-获取线程堆栈快照"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用-jstack-获取线程堆栈快照"}},[a._v("#")]),a._v(" 4. 使用 "),t("code",[a._v("jstack")]),a._v(" 获取线程堆栈快照")]),a._v(" "),t("p",[t("code",[a._v("jstack")]),a._v(" 是 JDK 提供的工具，用于获取 Java 进程中的所有线程的详细堆栈信息，包括 Tomcat 中的工作线程。")]),a._v(" "),t("h4",{attrs:{id:"获取线程快照"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取线程快照"}},[a._v("#")]),a._v(" 获取线程快照")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" /opt/java/openjdk/bin/jstack "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /tmp/thread_dump.txt\n")])])]),t("ul",[t("li",[a._v("这将保存进程 PID 为 "),t("code",[a._v("7")]),a._v(" 的线程快照到 "),t("code",[a._v("/tmp/thread_dump.txt")]),a._v(" 文件中。")]),a._v(" "),t("li",[a._v("你可以使用文本编辑器或 "),t("code",[a._v("cat")]),a._v("、"),t("code",[a._v("less")]),a._v(" 命令查看这个文件，找到线程的详细信息。")])]),a._v(" "),t("h4",{attrs:{id:"过滤-http-nio-线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#过滤-http-nio-线程"}},[a._v("#")]),a._v(" 过滤 "),t("code",[a._v("http-nio")]),a._v(" 线程")]),a._v(" "),t("p",[a._v("Tomcat 使用 "),t("code",[a._v("http-nio")]),a._v(" 线程来处理 HTTP 请求，你可以用以下命令过滤出所有 "),t("code",[a._v("http-nio")]),a._v(" 线程：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'http-nio'")]),a._v(" /tmp/thread_dump.txt\n")])])]),t("ul",[t("li",[a._v("这将找到所有与 "),t("code",[a._v("http-nio")]),a._v(" 相关的线程，包括 "),t("code",[a._v("http-nio-8080-exec-*")]),a._v("、"),t("code",[a._v("http-nio-8080-Acceptor")]),a._v(" 等。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("http-nio-8080-exec-*")])]),a._v(" 线程用于处理实际的 HTTP 请求，是主要的工作线程。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("http-nio-8080-Acceptor")])]),a._v(" 线程用于接受新的客户端连接。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("http-nio-8080-ClientPoller")])]),a._v(" 线程用于管理 I/O 事件。")])]),a._v(" "),t("h3",{attrs:{id:"_5-使用-jcmd-查看线程的详细状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用-jcmd-查看线程的详细状态"}},[a._v("#")]),a._v(" 5. 使用 "),t("code",[a._v("jcmd")]),a._v(" 查看线程的详细状态")]),a._v(" "),t("p",[t("code",[a._v("jcmd")]),a._v(" 工具是另一个用于诊断 Java 应用程序的工具，可以更精细地查看线程的详细信息。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" /opt/java/openjdk/bin/jcmd "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v(" Thread.print "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /tmp/jcmd_thread_info.txt\n")])])]),t("ul",[t("li",[a._v("这会将所有线程的详细状态输出到文件 "),t("code",[a._v("/tmp/jcmd_thread_info.txt")]),a._v(" 中。")]),a._v(" "),t("li",[a._v("同样，你可以通过查看这个文件找到 "),t("code",[a._v("http-nio")]),a._v(" 相关的线程。")])]),a._v(" "),t("h3",{attrs:{id:"_6-分析-tomcat-线程的锁定状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-分析-tomcat-线程的锁定状态"}},[a._v("#")]),a._v(" 6. 分析 Tomcat 线程的锁定状态")]),a._v(" "),t("p",[a._v("如果你怀疑线程因为资源竞争（如锁）而陷入阻塞，可以使用 "),t("code",[a._v("jstack")]),a._v(" 输出来查看线程是否处于 "),t("code",[a._v("BLOCKED")]),a._v(" 或 "),t("code",[a._v("WAITING")]),a._v(" 状态。")]),a._v(" "),t("h4",{attrs:{id:"查看线程锁的使用情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看线程锁的使用情况"}},[a._v("#")]),a._v(" 查看线程锁的使用情况")]),a._v(" "),t("p",[a._v("使用以下命令来查找锁信息：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-E")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BLOCKED|waiting to lock|parking to wait"')]),a._v(" /tmp/thread_dump.txt\n")])])]),t("ul",[t("li",[t("code",[a._v("BLOCKED")]),a._v("：表示线程正在等待获取一个锁，但该锁已被其他线程占用。")]),a._v(" "),t("li",[t("code",[a._v("waiting to lock")]),a._v("：表示线程正等待获取特定资源的锁。")])]),a._v(" "),t("h3",{attrs:{id:"_7-结合-spid-进一步分析线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-结合-spid-进一步分析线程"}},[a._v("#")]),a._v(" 7. 结合 "),t("code",[a._v("SPID")]),a._v(" 进一步分析线程")]),a._v(" "),t("ul",[t("li",[a._v("在 "),t("code",[a._v("top")]),a._v(" 或 "),t("code",[a._v("ps")]),a._v(" 命令中，你会看到每个线程的 "),t("code",[a._v("SPID")]),a._v("，它表示线程的系统级线程 ID。")]),a._v(" "),t("li",[a._v("在 "),t("code",[a._v("jstack")]),a._v(" 输出中，线程 ID ("),t("code",[a._v("nid")]),a._v(") 是以十六进制表示的。如果你需要匹配某个线程，可以将 "),t("code",[a._v("SPID")]),a._v(" 转换为十六进制，以便在 "),t("code",[a._v("jstack")]),a._v(" 输出中查找。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("printf")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%x\\n'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("SPID"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("ul",[t("li",[a._v("用 "),t("code",[a._v("<SPID>")]),a._v(" 替换为你想查找的线程的系统 ID，这样可以找到对应的线程堆栈信息。")])]),a._v(" "),t("h3",{attrs:{id:"常见的-tomcat-线程类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的-tomcat-线程类型"}},[a._v("#")]),a._v(" 常见的 Tomcat 线程类型")]),a._v(" "),t("ol",[t("li",[t("strong",[t("code",[a._v("http-nio-8080-Acceptor")])]),a._v("：负责接受新的客户端连接。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("http-nio-8080-ClientPoller")])]),a._v("：负责管理现有连接的读写事件。")]),a._v(" "),t("li",[t("strong",[t("code",[a._v("http-nio-8080-exec-*")])]),a._v("：负责处理 HTTP 请求的工作线程，数量与 Tomcat 的并发请求能力相关。")])]),a._v(" "),t("p",[a._v("这些线程的数量和状态会随着系统负载的增加而变化，通过上述方法可以分析 Tomcat 在不同负载下的表现。")]),a._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("获取 Java 进程的 PID")]),a._v("：使用 "),t("code",[a._v("ps -ef | grep java")]),a._v(" 找到 Tomcat 进程的 PID。")]),a._v(" "),t("li",[t("strong",[a._v("查看所有线程")]),a._v("：使用 "),t("code",[a._v("ps -T -p <PID>")]),a._v(" 或 "),t("code",[a._v("top -Hp <PID>")]),a._v(" 查看 Java 应用中所有线程的资源使用情况。")]),a._v(" "),t("li",[t("strong",[a._v("使用 "),t("code",[a._v("jstack")]),a._v(" 获取线程堆栈")]),a._v("：通过 "),t("code",[a._v("jstack")]),a._v(" 获取详细的线程信息，保存到文件并查找相关信息。")]),a._v(" "),t("li",[t("strong",[a._v("使用 "),t("code",[a._v("jcmd")]),a._v(" 获取更多线程状态信息")]),a._v("：通过 "),t("code",[a._v("jcmd")]),a._v(" 可以获得类似 "),t("code",[a._v("jstack")]),a._v(" 的输出，但更结构化。")]),a._v(" "),t("li",[t("strong",[a._v("分析锁和等待状态")]),a._v("：查看 "),t("code",[a._v("BLOCKED")]),a._v(" 或 "),t("code",[a._v("WAITING")]),a._v(" 状态的线程，了解线程是否在等待锁。")])]),a._v(" "),t("p",[a._v("通过这些工具和方法，你可以深入了解 Tomcat 线程的运行情况，并对可能存在的锁问题或资源竞争进行分析，从而有效监控和优化 Java 应用程序的性能。")])])}),[],!1,null,null,null);t.default=_.exports}}]);