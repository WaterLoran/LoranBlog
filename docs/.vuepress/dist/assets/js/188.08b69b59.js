(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{617:function(v,_,t){"use strict";t.r(_);var s=t(2),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[_("strong",[v._v("系统负载（System Load）")]),v._v(" 通常是指系统在一段时间内的运行负荷，它表示正在等待 CPU 执行或等待某些资源（如磁盘或网络 I/O）的任务数量。它是一个衡量系统繁忙程度的重要指标，特别是在 Linux/Unix 系统中，常用的 "),_("code",[v._v("uptime")]),v._v(" 或 "),_("code",[v._v("top")]),v._v(" 命令中会显示最近 1 分钟、5 分钟和 15 分钟的平均负载。")]),v._v(" "),_("h3",{attrs:{id:"系统负载的计算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#系统负载的计算"}},[v._v("#")]),v._v(" 系统负载的计算")]),v._v(" "),_("p",[_("strong",[v._v("系统负载")]),v._v(" 是指系统的任务队列长度，即有多少进程正在等待 CPU 或其他资源（如 I/O）。它并不只是反映 CPU 的使用情况，还包括等待 I/O 操作的进程。因此，系统负载是 CPU 密集型任务和 I/O 密集型任务的综合反映。")]),v._v(" "),_("h4",{attrs:{id:"负载计算的概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载计算的概念"}},[v._v("#")]),v._v(" 负载计算的概念")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("1 分钟、5 分钟和 15 分钟平均负载")]),v._v("：\n系统负载通常表示为过去 1 分钟、5 分钟和 15 分钟内的平均值。这些值代表了系统在这段时间内有多少进程正在等待 CPU 或其他资源的处理。")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("队列长度")]),v._v("：\n系统负载的数字实际上是指任务队列的长度。比如：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("1.0")]),v._v(" 表示队列中正好有 1 个进程在等待 CPU，队列中没有过载，系统正好在合理的负载下运行。")]),v._v(" "),_("li",[_("strong",[v._v("大于 1.0")]),v._v(" 的值表示队列中的任务多于 CPU 核心数，系统可能会出现过载（即某些任务在等待 CPU 的调度）。")]),v._v(" "),_("li",[_("strong",[v._v("小于 1.0")]),v._v(" 的值表示 CPU 还有剩余能力，系统处于空闲状态或未被充分利用。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("多核与负载")]),v._v("：\n系统负载值通常与系统的 CPU 核心数相关联。例如：")]),v._v(" "),_("ul",[_("li",[v._v("对于一个 4 核的系统，如果系统负载为 "),_("strong",[v._v("4.0")]),v._v("，这表示每个 CPU 核心都有任务在执行，系统工作在 100% 负荷。")]),v._v(" "),_("li",[v._v("如果系统负载为 "),_("strong",[v._v("8.0")]),v._v("，则表示有 4 个任务在等待，系统负载超出了 CPU 核心数，存在资源不足的情况。")])])])]),v._v(" "),_("h3",{attrs:{id:"负载计算的公式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载计算的公式"}},[v._v("#")]),v._v(" 负载计算的公式")]),v._v(" "),_("p",[v._v("在 Unix/Linux 系统中，系统负载是通过"),_("strong",[v._v("运行队列")]),v._v("（run queue）和 "),_("strong",[v._v("等待 I/O 操作的进程")]),v._v("的数量来计算的。")]),v._v(" "),_("p",[v._v("系统在每个时钟周期或间隔周期会记录下当前系统中有多少进程在：")]),v._v(" "),_("ul",[_("li",[v._v("等待 CPU（运行队列）。")]),v._v(" "),_("li",[v._v("等待 I/O 操作完成。")])]),v._v(" "),_("p",[v._v("这些值会在一段时间内进行平均，然后分别表示为过去 1 分钟、5 分钟和 15 分钟的平均负载。")]),v._v(" "),_("p",[v._v("具体的负载计算公式：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("系统负载 = 正在运行的任务数 + 正在等待 CPU 或 I/O 资源的任务数\n")])])]),_("p",[v._v("这些任务队列的长度会定期采样，然后计算出一个指数移动平均值（Exponential Moving Average, EMA），以平滑时间段内的波动。不同的时间窗口（1 分钟、5 分钟、15 分钟）使用不同的衰减因子来计算。")]),v._v(" "),_("h3",{attrs:{id:"负载与-cpu-使用率的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载与-cpu-使用率的区别"}},[v._v("#")]),v._v(" 负载与 CPU 使用率的区别")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("系统负载")]),v._v(" 反映了系统中"),_("strong",[v._v("等待被 CPU 调度")]),v._v("和"),_("strong",[v._v("正在执行任务")]),v._v("的所有进程数量。除了 CPU 密集型任务，还包括正在等待 I/O 的进程。")]),v._v(" "),_("li",[_("strong",[v._v("CPU 使用率")]),v._v(" 仅反映了 CPU 资源的使用情况（比如用户空间进程、系统进程、空闲时间等），它不包括等待 CPU 调度的任务。")])]),v._v(" "),_("p",[v._v("例如：")]),v._v(" "),_("ul",[_("li",[v._v("系统负载为 2.0，意味着有 2 个任务正在运行或等待 CPU 资源，可能正在争抢 CPU 。")]),v._v(" "),_("li",[v._v("CPU 使用率为 100%，则表示 CPU 被完全占用，但系统负载仍然可能低于 1.0，因为可能没有其他进程在等待 CPU。")])]),v._v(" "),_("h3",{attrs:{id:"如何解读系统负载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何解读系统负载"}},[v._v("#")]),v._v(" 如何解读系统负载")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("1.0 负载的含义")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("在单核 CPU 系统中，1.0 的负载表示 CPU 正在全负荷运行，任务队列中没有过多的进程等待 CPU。")]),v._v(" "),_("li",[v._v("在多核系统中，1.0 的负载表示 CPU 负载很轻，因为系统有多个核可以分摊负载。假设系统有 4 个 CPU 核，那么 1.0 的负载意味着系统的总负载只占用了 25% 的 CPU 资源。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("超过核心数的负载")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("当负载值超过 CPU 核心数时（例如 4 核系统中负载为 5），表示系统存在资源瓶颈，有进程在排队等待 CPU 时间片。这种情况下，系统可能会出现响应时间变长、吞吐量下降的现象。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("较高的 I/O 等待负载")]),v._v("：")]),v._v(" "),_("ul",[_("li",[v._v("负载不仅受 CPU 的影响，I/O 密集型任务（如磁盘读写、网络请求）也会增加负载。如果有大量进程在等待 I/O 操作完成，系统负载也会增加。")])])])]),v._v(" "),_("h3",{attrs:{id:"高负载的影响"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#高负载的影响"}},[v._v("#")]),v._v(" 高负载的影响")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("过高的系统负载")]),v._v("：当系统负载超过了 CPU 的总核数时，系统会开始出现性能问题。进程需要排队等待 CPU 资源，响应速度会变慢。")]),v._v(" "),_("li",[_("strong",[v._v("I/O 密集型的影响")]),v._v("：如果系统有大量 I/O 请求（如磁盘操作或网络传输），即使 CPU 使用率不高，系统负载也可能会增加，因为进程在等待 I/O 资源完成。")])]),v._v(" "),_("h3",{attrs:{id:"如何优化系统负载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何优化系统负载"}},[v._v("#")]),v._v(" 如何优化系统负载")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("增加 CPU 核心数")]),v._v("：在 CPU 资源不足时，增加系统的 CPU 核心可以有效减小 CPU 争用，提高并发处理能力。")]),v._v(" "),_("li",[_("strong",[v._v("优化进程调度")]),v._v("：通过调整进程的优先级或控制任务数量，减少同时运行的进程数，从而降低系统负载。")]),v._v(" "),_("li",[_("strong",[v._v("优化 I/O 性能")]),v._v("：提高磁盘或网络的性能，例如使用 SSD 替代 HDD，或增加网络带宽，减少进程等待 I/O 的时间。")]),v._v(" "),_("li",[_("strong",[v._v("应用性能优化")]),v._v("：通过优化应用程序的算法、减少不必要的系统调用、减少不必要的 I/O 操作等手段，减少系统负载。")])]),v._v(" "),_("h3",{attrs:{id:"汽车过桥的例子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#汽车过桥的例子"}},[v._v("#")]),v._v(" 汽车过桥的例子")]),v._v(" "),_("p",[v._v("想象一座桥，每次只允许100辆车同时通过。我们来看看不同负载下的情况。")]),v._v(" "),_("h4",{attrs:{id:"负载为50"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载为50"}},[v._v("#")]),v._v(" 负载为50%")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("情况")]),v._v("：桥上有50辆车。")]),v._v(" "),_("li",[_("strong",[v._v("解读")]),v._v("：桥的负载为50%。车辆流畅通过，没有拥堵，行驶速度快，桥的结构安全且稳定。")])]),v._v(" "),_("h4",{attrs:{id:"负载为150"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载为150"}},[v._v("#")]),v._v(" 负载为150%")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("情况")]),v._v("：桥上有100辆车，路上有50辆车在等待上桥。")]),v._v(" "),_("li",[_("strong",[v._v("解读")]),v._v("：桥的负载为150%。此时，桥达到了满载状态，但还有部分车辆在路上等待，出现轻微拥堵。行驶速度减慢，但桥的安全性仍然可以接受。")])]),v._v(" "),_("h4",{attrs:{id:"负载为200"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载为200"}},[v._v("#")]),v._v(" 负载为200%")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("情况")]),v._v("：桥上有100辆车，路上有100辆车在等待上桥。")]),v._v(" "),_("li",[_("strong",[v._v("解读")]),v._v("：桥的负载为200%。桥达到最大承载能力，交通拥堵显著，车辆等待时间增加，安全性开始受到威胁。管理方可能需要采取措施，如限制进入。")])]),v._v(" "),_("h4",{attrs:{id:"负载为300"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载为300"}},[v._v("#")]),v._v(" 负载为300%")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("情况")]),v._v("：桥上有100辆车，路上有200辆车在等待上桥。")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("解读")]),v._v("：桥的负载为300%。此时，桥上已满载，而等待的车辆数量是桥的承载能力的两倍，交通几乎瘫痪。安全隐患明显增加，可能导致桥梁结构受损。应立即采取紧急措施，限制车辆进入，并组织疏散。")])])]),v._v(" "),_("h3",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("系统负载（System Load）通过计算正在运行和等待运行的进程数量来衡量系统的繁忙程度。负载的计算基于 CPU 队列中进程的数量，包括等待 CPU 和等待 I/O 操作的进程。负载高时，表示系统资源紧张，进程需要排队等待 CPU 或其他资源；负载低时，系统资源相对充足。")])])}),[],!1,null,null,null);_.default=r.exports}}]);