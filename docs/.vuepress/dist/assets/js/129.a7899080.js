(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{555:function(t,s,n){"use strict";n.r(s);var a=n(2),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("LangChain 的 "),s("strong",[t._v("Memory")]),t._v(" 功能帮助开发者在多轮对话中保存上下文信息，使模型能够根据之前的对话内容生成连贯的回答。以下是 LangChain Memory 功能的详细使用方法以及代码示例。")]),t._v(" "),s("h3",{attrs:{id:"memory-类型介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory-类型介绍"}},[t._v("#")]),t._v(" Memory 类型介绍")]),t._v(" "),s("p",[t._v("LangChain 提供了多种 Memory 类型，每种类型适用于不同的场景：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("ConversationBufferMemory")]),t._v("：保存完整的对话历史。")]),t._v(" "),s("li",[s("strong",[t._v("ConversationBufferWindowMemory")]),t._v("：保存最近几轮的对话。")]),t._v(" "),s("li",[s("strong",[t._v("ConversationSummaryMemory")]),t._v("：将对话历史总结为简短摘要。")]),t._v(" "),s("li",[s("strong",[t._v("ConversationKGMemory")]),t._v("：通过知识图谱的方式存储对话中的实体及其关系。")]),t._v(" "),s("li",[s("strong",[t._v("CombinedMemory")]),t._v("：结合多种 Memory 类型，适应更复杂的对话需求。")])]),t._v(" "),s("h3",{attrs:{id:"_1-conversationbuffermemory-使用方法与示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-conversationbuffermemory-使用方法与示例"}},[t._v("#")]),t._v(" 1. ConversationBufferMemory 使用方法与示例")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")]),t._v("：适合需要完整对话历史的聊天机器人或客服系统。")]),t._v(" "),s("p",[s("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationBufferMemory\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("llms "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OpenAI\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chains "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationChain\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化 Memory 和语言模型")]),t._v("\nmemory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationBufferMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nllm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconversation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationChain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例对话")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你是谁？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你记得我刚刚说了什么吗？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解释")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("这里我们创建了一个 "),s("code",[t._v("ConversationBufferMemory")]),t._v(" 实例，该实例会保存所有的对话历史。")]),t._v(" "),s("li",[t._v("通过调用 "),s("code",[t._v("conversation.run()")]),t._v(" 方法，我们与模型进行对话，模型会参考之前的对话内容回答问题。")])]),t._v(" "),s("h3",{attrs:{id:"_2-conversationbufferwindowmemory-使用方法与示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-conversationbufferwindowmemory-使用方法与示例"}},[t._v("#")]),t._v(" 2. ConversationBufferWindowMemory 使用方法与示例")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")]),t._v("：适合只需保存最近几轮对话的短期记忆场景，如实时咨询。")]),t._v(" "),s("p",[s("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationBufferWindowMemory\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("llms "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OpenAI\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chains "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationChain\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化 Memory 和语言模型，设置窗口大小为 3")]),t._v("\nmemory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationBufferWindowMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nllm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconversation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationChain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例对话")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"今天的天气怎么样？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我刚刚问了什么？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你还记得我第一句话吗？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应该看不到第一句话的记忆，因为窗口大小为 3")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解释")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ConversationBufferWindowMemory(k=3)")]),t._v(" 会保存最近 3 轮对话。")]),t._v(" "),s("li",[t._v("当新的一轮对话加入时，最早的对话会被移除，只保留最新的 3 条对话内容。")])]),t._v(" "),s("h3",{attrs:{id:"_3-conversationsummarymemory-使用方法与示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-conversationsummarymemory-使用方法与示例"}},[t._v("#")]),t._v(" 3. ConversationSummaryMemory 使用方法与示例")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")]),t._v("：适合长时间对话，避免存储过多信息，通过摘要来保存上下文，如客户服务、知识问答等。")]),t._v(" "),s("p",[s("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationSummaryMemory\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("llms "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OpenAI\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chains "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationChain\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化 Memory 和语言模型")]),t._v("\nllm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmemory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationSummaryMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconversation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationChain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例对话")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我是一名学生，喜欢学习编程。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你还记得我喜欢什么吗？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解释")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ConversationSummaryMemory")]),t._v(" 会总结对话历史，保存摘要而不是所有细节。")]),t._v(" "),s("li",[t._v("对于长时间对话，这种记忆方式能节省 token，提高性能。")])]),t._v(" "),s("h3",{attrs:{id:"_4-conversationkgmemory-使用方法与示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-conversationkgmemory-使用方法与示例"}},[t._v("#")]),t._v(" 4. ConversationKGMemory 使用方法与示例")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")]),t._v("：适合知识图谱应用，追踪对话中的实体关系，如复杂的问答系统和知识管理。")]),t._v(" "),s("p",[s("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationKGMemory\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("llms "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OpenAI\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chains "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationChain\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化 Memory 和语言模型")]),t._v("\nmemory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationKGMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nllm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconversation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationChain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例对话")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我叫李雷，喜欢足球。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我的朋友韩梅梅喜欢篮球。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李雷和韩梅梅喜欢什么？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解释")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("ConversationKGMemory")]),t._v(" 会创建实体及其关系的知识图谱。例如，它能将“李雷”和“韩梅梅”及他们的爱好记录下来。")]),t._v(" "),s("li",[t._v("对于涉及复杂实体和关系的对话应用，这种记忆方式能帮助模型理解上下文关系。")])]),t._v(" "),s("h3",{attrs:{id:"_5-combinedmemory-使用方法与示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-combinedmemory-使用方法与示例"}},[t._v("#")]),t._v(" 5. CombinedMemory 使用方法与示例")]),t._v(" "),s("p",[s("strong",[t._v("适用场景")]),t._v("：适合复杂对话系统，需要结合多种记忆方式的场景，如长时间咨询服务和多任务处理系统。")]),t._v(" "),s("p",[s("strong",[t._v("代码示例")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("memory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" CombinedMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ConversationBufferMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ConversationSummaryMemory\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("llms "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" OpenAI\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" langchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("chains "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" ConversationChain\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化多种 Memory 并结合")]),t._v("\nbuffer_memory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationBufferMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsummary_memory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationSummaryMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("OpenAI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmemory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CombinedMemory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("memories"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("buffer_memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" summary_memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置对话链")]),t._v("\nllm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OpenAI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("model"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconversation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ConversationChain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("llm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" memory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("memory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例对话")]),t._v("\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你好，我是一个喜欢历史的老师。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nresponse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conversation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你记得我的职业吗？"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("解释")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("CombinedMemory")]),t._v(" 将 "),s("code",[t._v("ConversationBufferMemory")]),t._v(" 和 "),s("code",[t._v("ConversationSummaryMemory")]),t._v(" 结合起来，实现全面的上下文追踪。")]),t._v(" "),s("li",[t._v("适用于需要同时存储详细历史和摘要的复杂场景。")])]),t._v(" "),s("h3",{attrs:{id:"memory-功能的最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory-功能的最佳实践"}},[t._v("#")]),t._v(" Memory 功能的最佳实践")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("选择合适的 Memory 类型")]),t._v("：根据应用的上下文长度和复杂性，选择适合的 Memory 类型，避免不必要的资源消耗。")]),t._v(" "),s("li",[s("strong",[t._v("设置合适的窗口大小")]),t._v("：对于 "),s("code",[t._v("ConversationBufferWindowMemory")]),t._v("，合理设置窗口大小可以控制内存使用。")]),t._v(" "),s("li",[s("strong",[t._v("结合使用不同的 Memory")]),t._v("：通过 "),s("code",[t._v("CombinedMemory")]),t._v(" 实现更加灵活的记忆管理，适应多样化的需求。")])]),t._v(" "),s("p",[t._v("通过 Memory 功能，LangChain 能够提供更智能、更连贯的对话交互体验，这对于多轮对话、问答和咨询类应用尤为重要。")])])}),[],!1,null,null,null);s.default=r.exports}}]);