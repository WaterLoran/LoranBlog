(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{619:function(v,_,e){"use strict";e.r(_);var s=e(2),n=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("Nginx 的性能容量（即 Nginx 能够承载的最大并发连接数和每秒请求数）通常取决于硬件配置、操作系统优化、Nginx 的配置选项、网络带宽以及所部署的应用的复杂度。Nginx 本身作为一个高性能、低资源消耗的 HTTP 服务器和反向代理服务器，具备非常强大的处理能力。在正确配置和优化的条件下，Nginx 可以处理大量的并发请求。")]),v._v(" "),_("h3",{attrs:{id:"一、nginx-性能容量的关键指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、nginx-性能容量的关键指标"}},[v._v("#")]),v._v(" 一、Nginx 性能容量的关键指标")]),v._v(" "),_("p",[v._v("Nginx 的性能容量通常由以下几个关键指标来衡量：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("并发连接数（Concurrent Connections）")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("并发连接数")]),v._v("指的是在同一时刻 Nginx 服务器上保持活跃状态的连接数量。")]),v._v(" "),_("li",[v._v("Nginx 本身基于事件驱动（Event-Driven）的架构模型，使用异步 I/O 处理，可以高效处理数万甚至数十万的并发连接。")]),v._v(" "),_("li",[v._v("常见的默认配置下，Nginx 可以支持大约 "),_("strong",[v._v("10,000")]),v._v(" 个以上的并发连接。如果经过进一步的系统和 Nginx 配置优化，可以支持 "),_("strong",[v._v("100,000+")]),v._v(" 的并发连接。")])])]),v._v(" "),_("li",[_("strong",[v._v("每秒请求数（Requests Per Second, RPS 或 QPS）")]),v._v(" "),_("ul",[_("li",[v._v("每秒请求数表示 Nginx 每秒能够处理的请求数量。这个指标通常取决于请求的复杂度（如静态文件、动态代理、SSL 加密等）以及服务器的 CPU 性能。")]),v._v(" "),_("li",[v._v("对于静态文件（如图片、HTML、JS 文件等），Nginx 每秒可以轻松处理 "),_("strong",[v._v("50,000")]),v._v(" 到 "),_("strong",[v._v("100,000+")]),v._v(" 的请求。")]),v._v(" "),_("li",[v._v("但是如果 Nginx 用于反向代理、负载均衡、或处理复杂的动态请求时（例如 PHP-FPM、Node.js 后端应用），RPS 可能会显著下降到几千甚至几百。")])])]),v._v(" "),_("li",[_("strong",[v._v("吞吐量（Throughput）")]),v._v(" "),_("ul",[_("li",[v._v("吞吐量指的是 Nginx 每秒能够传输的数据量（通常用 MB/s 或 Gbps 表示）。")]),v._v(" "),_("li",[v._v("吞吐量主要受限于网络带宽和硬件 I/O 性能。在 1Gbps 的网络环境下，Nginx 的吞吐量通常可以达到 "),_("strong",[v._v("100MB/s")]),v._v(" 以上。")])])]),v._v(" "),_("li",[_("strong",[v._v("CPU 和内存消耗")]),v._v(" "),_("ul",[_("li",[v._v("Nginx 采用的事件驱动模型使得它在高并发情况下能够保持较低的 CPU 和内存消耗，但如果处理复杂的 SSL 连接或代理大量动态请求，CPU 和内存消耗可能会显著增加。")])])])]),v._v(" "),_("h3",{attrs:{id:"二、影响-nginx-性能的关键因素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、影响-nginx-性能的关键因素"}},[v._v("#")]),v._v(" 二、影响 Nginx 性能的关键因素")]),v._v(" "),_("p",[v._v("Nginx 的性能容量受多个因素影响。以下是影响 Nginx 性能的主要因素：")]),v._v(" "),_("ol",[_("li",[_("strong",[v._v("硬件资源")]),v._v(" "),_("ul",[_("li",[v._v("CPU 的核心数量和时钟频率直接影响 Nginx 的请求处理能力。一般来说，多核 CPU 能够大幅提升 Nginx 的并发连接数和吞吐量。")]),v._v(" "),_("li",[v._v("内存大小决定了 Nginx 能够支持的连接上下文、缓存文件的大小等。")]),v._v(" "),_("li",[v._v("磁盘 I/O 性能对 Nginx 处理静态文件的能力有显著影响。")]),v._v(" "),_("li",[v._v("网络带宽是限制 Nginx 吞吐量的主要因素之一。Nginx 在 1Gbps 的网络上性能会比在 100Mbps 网络上高出数倍。")])])]),v._v(" "),_("li",[_("strong",[v._v("Nginx 配置优化")]),v._v(" "),_("ul",[_("li",[_("strong",[_("code",[v._v("worker_processes")]),v._v(" 和 "),_("code",[v._v("worker_connections")]),v._v(" 设置")]),v._v("：这两个参数直接决定了 Nginx 的并发连接数。\n"),_("ul",[_("li",[_("code",[v._v("worker_processes")]),v._v("：一般建议设置为服务器的 CPU 核心数，确保每个核心处理一个 Nginx 进程。")]),v._v(" "),_("li",[_("code",[v._v("worker_connections")]),v._v("：表示每个 Nginx worker 能够处理的最大连接数。例如，设置 "),_("code",[v._v("worker_connections")]),v._v(" 为 4096，则单个 "),_("code",[v._v("worker_process")]),v._v(" 最多可以处理 4096 个连接。")])])]),v._v(" "),_("li",[_("strong",[v._v("Keep-Alive 连接设置")]),v._v("：Nginx 的 Keep-Alive 可以减少 TCP 握手的开销，但过多的 Keep-Alive 连接可能会导致资源耗尽。因此，合理设置 "),_("code",[v._v("keepalive_timeout")]),v._v(" 和 "),_("code",[v._v("keepalive_requests")]),v._v(" 非常关键。")]),v._v(" "),_("li",[_("strong",[v._v("缓存和文件处理")]),v._v("：对于静态文件（如图片、HTML、JS 等），可以开启 "),_("code",[v._v("sendfile")]),v._v("、"),_("code",[v._v("tcp_nopush")]),v._v(" 和 "),_("code",[v._v("tcp_nodelay")]),v._v(" 来优化文件传输性能。")])])]),v._v(" "),_("li",[_("strong",[v._v("操作系统优化")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("最大文件描述符限制")]),v._v("：Nginx 的并发连接数直接受限于操作系统的文件描述符数量（"),_("code",[v._v("ulimit -n")]),v._v("）。建议将 "),_("code",[v._v("ulimit -n")]),v._v(" 设置为至少 65536。")]),v._v(" "),_("li",[_("strong",[v._v("内核参数调整")]),v._v("：可以通过调整 "),_("code",[v._v("sysctl")]),v._v(" 参数（如 "),_("code",[v._v("fs.file-max")]),v._v("、"),_("code",[v._v("net.core.somaxconn")]),v._v("、"),_("code",[v._v("net.ipv4.tcp_tw_reuse")]),v._v(" 等）来提升操作系统的网络和文件处理能力。")])])]),v._v(" "),_("li",[_("strong",[v._v("SSL/TLS 加密开销")]),v._v(" "),_("ul",[_("li",[v._v("SSL/TLS 连接的加解密会显著增加 Nginx 的 CPU 消耗。如果大量使用 HTTPS 连接，可以考虑使用硬件加速（如支持 SSL Offloading 的硬件）或启用 "),_("code",[v._v("SSL session cache")]),v._v(" 来减少 CPU 开销。")])])]),v._v(" "),_("li",[_("strong",[v._v("请求类型和后端服务性能")]),v._v(" "),_("ul",[_("li",[v._v("如果 Nginx 用作反向代理或负载均衡器，那么后端服务（如 PHP-FPM、Java、Node.js 等）的性能瓶颈会影响 Nginx 的整体性能。")]),v._v(" "),_("li",[v._v("后端服务的响应速度和处理能力决定了 Nginx 能够处理的最大 RPS 和并发连接数。")])])])]),v._v(" "),_("h3",{attrs:{id:"三、nginx-性能测试与容量评估"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、nginx-性能测试与容量评估"}},[v._v("#")]),v._v(" 三、Nginx 性能测试与容量评估")]),v._v(" "),_("p",[v._v("为了准确评估 Nginx 的性能容量，通常需要进行性能测试。可以使用以下工具对 Nginx 进行压力测试：")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[_("code",[v._v("ab")]),v._v("（Apache Benchmark）")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("工具说明："),_("code",[v._v("ab")]),v._v(" 是 Apache 自带的轻量级 HTTP 压力测试工具，适合进行小规模的请求测试。")])]),v._v(" "),_("li",[_("p",[v._v("使用示例：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("bash复制代码ab -n 100000 -c 1000 http://your-nginx-server/\n")])])])]),v._v(" "),_("li",[_("p",[v._v("参数说明：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("-n 100000")]),v._v("：总请求数为 100,000。")]),v._v(" "),_("li",[_("code",[v._v("-c 1000")]),v._v("：并发请求数为 1000。")])])])])]),v._v(" "),_("li",[_("p",[_("strong",[_("code",[v._v("wrk")])])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("工具说明："),_("code",[v._v("wrk")]),v._v(" 是一个现代化的 HTTP 压力测试工具，支持多线程和 Lua 脚本，适合进行高并发、大规模的性能测试。")])]),v._v(" "),_("li",[_("p",[v._v("使用示例：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("bash复制代码wrk -t12 -c400 -d30s http://your-nginx-server/\n")])])])]),v._v(" "),_("li",[_("p",[v._v("参数说明：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("-t12")]),v._v("：12 个线程。")]),v._v(" "),_("li",[_("code",[v._v("-c400")]),v._v("：400 个并发连接。")]),v._v(" "),_("li",[_("code",[v._v("-d30s")]),v._v("：测试持续时间为 30 秒。")])])])])]),v._v(" "),_("li",[_("p",[_("strong",[_("code",[v._v("hey")]),v._v("（Go 语言编写的 HTTP 压力测试工具）")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("工具说明："),_("code",[v._v("hey")]),v._v(" 是基于 Go 语言编写的 HTTP 测试工具，易于使用且支持高并发。")])]),v._v(" "),_("li",[_("p",[v._v("使用示例：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("bash复制代码hey -n 100000 -c 1000 http://your-nginx-server/\n")])])])]),v._v(" "),_("li",[_("p",[v._v("参数说明：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("-n 100000")]),v._v("：总请求数为 100,000。")]),v._v(" "),_("li",[_("code",[v._v("-c 1000")]),v._v("：并发请求数为 1000。")])])])])]),v._v(" "),_("li",[_("p",[_("strong",[_("code",[v._v("siege")])])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("工具说明："),_("code",[v._v("siege")]),v._v(" 是一个经典的 HTTP 压力测试工具，支持模拟多个用户并发访问。")])]),v._v(" "),_("li",[_("p",[v._v("使用示例：")]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("bash复制代码siege -c 1000 -r 100 http://your-nginx-server/\n")])])])]),v._v(" "),_("li",[_("p",[v._v("参数说明：")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("-c 1000")]),v._v("：模拟 1000 个并发用户。")]),v._v(" "),_("li",[_("code",[v._v("-r 100")]),v._v("：每个用户重复请求 100 次。")])])])])])]),v._v(" "),_("h3",{attrs:{id:"四、nginx-性能优化建议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、nginx-性能优化建议"}},[v._v("#")]),v._v(" 四、Nginx 性能优化建议")]),v._v(" "),_("ol",[_("li",[_("p",[_("strong",[v._v("优化 "),_("code",[v._v("worker_processes")]),v._v(" 和 "),_("code",[v._v("worker_connections")]),v._v(" 配置")])]),v._v(" "),_("ul",[_("li",[v._v("设置 "),_("code",[v._v("worker_processes")]),v._v(" 为服务器的 CPU 核心数。")]),v._v(" "),_("li",[v._v("设置 "),_("code",[v._v("worker_connections")]),v._v(" 为 8192 或更高（取决于最大连接数）。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("启用 "),_("code",[v._v("sendfile")]),v._v("、"),_("code",[v._v("tcp_nopush")]),v._v(" 和 "),_("code",[v._v("tcp_nodelay")]),v._v(" 优化文件传输")])]),v._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("nginx复制代码sendfile on;\ntcp_nopush on;\ntcp_nodelay on;\n")])])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("增加 "),_("code",[v._v("keepalive_timeout")]),v._v(" 和 "),_("code",[v._v("keepalive_requests")])])]),v._v(" "),_("ul",[_("li",[v._v("合理设置 "),_("code",[v._v("keepalive_timeout")]),v._v("，避免连接过早关闭或持有时间过长。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("优化 SSL/TLS 配置")])]),v._v(" "),_("ul",[_("li",[v._v("启用 "),_("code",[v._v("SSL session cache")]),v._v("，减少 SSL 重新握手的开销。")])])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("操作系统级别优化")])]),v._v(" "),_("ul",[_("li",[_("p",[v._v("增加")]),v._v(" "),_("div",{staticClass:"language-shell extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[_("span",{pre:!0,attrs:{class:"token builtin class-name"}},[v._v("ulimit")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token parameter variable"}},[v._v("-n")]),v._v("\n")])])]),_("p",[v._v("值（文件描述符限制），例如：")]),v._v(" "),_("div",{staticClass:"language-shell extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[_("span",{pre:!0,attrs:{class:"token builtin class-name"}},[v._v("ulimit")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token parameter variable"}},[v._v("-n")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[v._v("65536")]),v._v("\n")])])])])])])])])}),[],!1,null,null,null);_.default=n.exports}}]);