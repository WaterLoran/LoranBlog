(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{564:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("如果你已经构建好知识图谱并将数据存入数据库（如 Neo4j），使用 "),a("strong",[t._v("GraphRAG")]),t._v("（Graph-based Retrieval-Augmented Generation）来利用知识图谱的内容，通常需要结合知识图谱检索和生成式 AI 模型（如 GPT）来回答问题或生成文本。以下是具体的实现方案和步骤：")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_1-graphrag-的工作流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-graphrag-的工作流程"}},[t._v("#")]),t._v(" "),a("strong",[t._v("1. GraphRAG 的工作流程")])]),t._v(" "),a("h4",{attrs:{id:"核心流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心流程"}},[t._v("#")]),t._v(" 核心流程：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("用户输入问题")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("从知识图谱中检索相关内容")]),t._v("：\n"),a("ul",[a("li",[t._v("使用图数据库查询语言（如 Neo4j 的 Cypher）提取相关节点和关系。")]),t._v(" "),a("li",[t._v("检索可以是直接匹配、模糊搜索，或多跳路径分析。")])])]),t._v(" "),a("li",[a("strong",[t._v("生成模型生成答案")]),t._v("：\n"),a("ul",[a("li",[t._v("将检索到的信息作为上下文输入生成式 AI（如 GPT）以生成回答。")])])]),t._v(" "),a("li",[a("strong",[t._v("返回最终答案")]),t._v("。")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_2-环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-环境准备"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2. 环境准备")])]),t._v(" "),a("h4",{attrs:{id:"安装必要的工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装必要的工具"}},[t._v("#")]),t._v(" 安装必要的工具：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" py2neo openai\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"_3-使用-neo4j-检索知识图谱内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-neo4j-检索知识图谱内容"}},[t._v("#")]),t._v(" "),a("strong",[t._v("3. 使用 Neo4j 检索知识图谱内容")])]),t._v(" "),a("p",[t._v("以下是从 Neo4j 中检索数据的关键步骤：")]),t._v(" "),a("h4",{attrs:{id:"连接数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库"}},[t._v("#")]),t._v(" "),a("strong",[t._v("连接数据库")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" py2neo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Graph\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接到 Neo4j 图数据库")]),t._v("\ngraph_db "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Graph"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bolt://localhost:7687"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" auth"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"neo4j"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"定义检索函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义检索函数"}},[t._v("#")]),t._v(" "),a("strong",[t._v("定义检索函数")])]),t._v(" "),a("p",[t._v("使用 Cypher 查询检索相关节点和关系。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("retrieve_from_graph")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" graph_db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    从知识图谱中检索相关信息\n    :param query: 用户输入的问题\n    :param graph_db: Neo4j 数据库连接对象\n    :return: 检索到的知识图谱内容\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例 Cypher 查询：通过关键词查找相关节点和关系")]),t._v("\n    cypher_query "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"""\n    MATCH (n)-[r]->(m)\n    WHERE n.name CONTAINS \'')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' OR m.name CONTAINS '")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'\n    RETURN n.name AS Node1, type(r) AS Relationship, m.name AS Node2\n    """')])]),t._v("\n    results "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" graph_db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cypher_query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" results\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例：用户提问")]),t._v("\nuser_query "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Machine Learning"')]),t._v("\nretrieved_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" retrieve_from_graph"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" graph_db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Retrieved Data:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" retrieved_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"_4-结合生成式-ai-生成答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-结合生成式-ai-生成答案"}},[t._v("#")]),t._v(" "),a("strong",[t._v("4. 结合生成式 AI 生成答案")])]),t._v(" "),a("p",[t._v("使用 OpenAI API 或其他生成式模型，将检索到的图谱内容作为上下文。")]),t._v(" "),a("h4",{attrs:{id:"示例-调用-gpt-生成答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-调用-gpt-生成答案"}},[t._v("#")]),t._v(" "),a("strong",[t._v("示例：调用 GPT 生成答案")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" openai\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 OpenAI API 密钥")]),t._v("\nopenai"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("api_key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your-openai-api-key"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate_answer_with_context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    使用 GPT 生成答案\n    :param query: 用户输入的问题\n    :param context: 从知识图谱检索到的上下文\n    :return: 生成的回答\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构造上下文信息")]),t._v("\n    context_text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Node1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" -[")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Relationship'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("]-> ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Node2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    prompt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-interpolation"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"""\n    You are a knowledgeable assistant. Based on the following context from a knowledge graph:\n    ')]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("context_text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n    \n    Please answer the question: ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\n    """')])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 调用 OpenAI 模型")]),t._v("\n    response "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" openai"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Completion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        engine"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text-davinci-003"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        prompt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("prompt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        max_tokens"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("150")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("choices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例：生成回答")]),t._v("\nanswer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" generate_answer_with_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" retrieved_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Generated Answer:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" answer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"_5-集成完整的-graphrag-流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-集成完整的-graphrag-流程"}},[t._v("#")]),t._v(" "),a("strong",[t._v("5. 集成完整的 GraphRAG 流程")])]),t._v(" "),a("p",[t._v("将检索和生成结合到一个完整的函数中。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("graph_rag_pipeline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" graph_db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    完整的 GraphRAG 管道\n    :param user_query: 用户输入的问题\n    :param graph_db: Neo4j 数据库连接对象\n    :return: 最终生成的回答\n    """')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 1: 从知识图谱中检索相关内容")]),t._v("\n    retrieved_data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" retrieve_from_graph"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" graph_db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" retrieved_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sorry, I couldn\'t find relevant information in the knowledge graph."')]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 2: 使用生成式 AI 生成答案")]),t._v("\n    answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" generate_answer_with_context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user_query"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" retrieved_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" answer\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 示例：运行管道")]),t._v("\nfinal_answer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" graph_rag_pipeline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"What is Machine Learning?"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" graph_db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Final Answer:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" final_answer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"_6-可扩展优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-可扩展优化"}},[t._v("#")]),t._v(" "),a("strong",[t._v("6. 可扩展优化")])]),t._v(" "),a("h4",{attrs:{id:"优化检索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化检索"}},[t._v("#")]),t._v(" "),a("strong",[t._v("优化检索")])]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("模糊查询")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("利用全文索引提升检索准确性。")]),t._v(" "),a("li",[t._v("示例：在 Neo4j 中创建全文索引："),a("div",{staticClass:"language-cypher extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cypher"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fulltext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNodeIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nameIndex"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("多跳查询")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("检索节点之间的多跳路径："),a("div",{staticClass:"language-cypher extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cypher"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("MATCH")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONTAINS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Machine Learning'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" p\n")])])])])])])]),t._v(" "),a("h4",{attrs:{id:"上下文优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上下文优化"}},[t._v("#")]),t._v(" "),a("strong",[t._v("上下文优化")])]),t._v(" "),a("ul",[a("li",[t._v("将知识图谱内容按逻辑分块，生成更清晰的上下文结构。")]),t._v(" "),a("li",[t._v("例如："),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Machine Learning -[is a]-> Field of AI\nDeep Learning -[is a subset of]-> Machine Learning\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"生成优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成优化"}},[t._v("#")]),t._v(" "),a("strong",[t._v("生成优化")])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("长文本处理")]),t._v("：\n"),a("ul",[a("li",[t._v("如果知识图谱内容较大，可以分批次传递上下文。")])])]),t._v(" "),a("li",[a("strong",[t._v("模型微调")]),t._v("：\n"),a("ul",[a("li",[t._v("使用自定义语料对生成模型微调，提高生成质量。")])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_7-示例输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-示例输出"}},[t._v("#")]),t._v(" "),a("strong",[t._v("7. 示例输出")])]),t._v(" "),a("p",[t._v("假设知识图谱中有以下数据：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("节点")]),t._v("：\n"),a("ul",[a("li",[t._v("Machine Learning")]),t._v(" "),a("li",[t._v("Artificial Intelligence")]),t._v(" "),a("li",[t._v("Deep Learning")])])]),t._v(" "),a("li",[a("strong",[t._v("关系")]),t._v("：\n"),a("ul",[a("li",[t._v("Machine Learning -[is a]-> Artificial Intelligence")]),t._v(" "),a("li",[t._v("Deep Learning -[is a subset of]-> Machine Learning")])])])]),t._v(" "),a("p",[t._v("用户问题：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("What is Machine Learning?\n")])])]),a("h4",{attrs:{id:"检索到的上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检索到的上下文"}},[t._v("#")]),t._v(" 检索到的上下文：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Machine Learning -[is a]-> Artificial Intelligence\nDeep Learning -[is a subset of]-> Machine Learning\n")])])]),a("h4",{attrs:{id:"生成的答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成的答案"}},[t._v("#")]),t._v(" 生成的答案：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Machine Learning is a field of Artificial Intelligence focused on enabling systems to learn from data. It also serves as the foundation for Deep Learning, a more specialized subset.\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" "),a("strong",[t._v("总结")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("优势")]),t._v("：GraphRAG 将知识图谱的显式关系与生成模型的上下文扩展能力结合，提供精准且语言自然的答案。")]),t._v(" "),a("li",[a("strong",[t._v("扩展性")]),t._v("：支持更复杂的图谱查询、多模态数据（如图像、文本混合知识图谱），适合个性化知识系统和智能问答。")]),t._v(" "),a("li",[a("strong",[t._v("技术栈")]),t._v("：Neo4j（图谱存储）、Python（图谱查询、生成模型调用）。")])]),t._v(" "),a("p",[t._v("如果需要更深入的定制或支持其他数据库，可以进一步讨论！")])])}),[],!1,null,null,null);a.default=r.exports}}]);