(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{650:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Tomcat 作为一个常用的 Java Web 服务器，默认配置可以满足普通的使用需求，但在高并发和生产环境下，通常需要对 Tomcat 进行调优以提高其性能和稳定性。以下是常见的 Tomcat 调优方法，涵盖了线程配置、内存优化、连接管理以及其他关键参数的调整。")]),t._v(" "),a("h3",{attrs:{id:"_1-线程池配置调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-线程池配置调优"}},[t._v("#")]),t._v(" 1. 线程池配置调优")]),t._v(" "),a("p",[t._v("Tomcat 的线程池调优是调优 Tomcat 的一个核心环节，因为线程数决定了 Tomcat 能同时处理多少个请求。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("maxThreads")]),t._v("：控制 Tomcat 可以处理的最大并发请求数。默认值为 200。如果并发量较高，可以根据服务器的硬件资源增加这个值。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxThreads")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("合适的 "),a("code",[t._v("maxThreads")]),t._v(" 值可以防止请求因线程不足而排队过久，但设置过高可能导致 CPU 频繁进行上下文切换。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("minSpareThreads")]),t._v("：Tomcat 启动时初始化的线程数，建议设置为一个较高的值以应对瞬时请求高峰。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("minSpareThreads")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("50"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  \n- **acceptCount**：定义当所有工作线程都被占用时，未处理请求的等待队列大小。默认值为 100，如果并发请求量非常大，可以适当增加，以避免请求被拒绝。\n  ```xml\n  <Connector port="8080" protocol="HTTP/1.1"\n             acceptCount="500" />\n')])])]),a("h3",{attrs:{id:"_2-连接器配置调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-连接器配置调优"}},[t._v("#")]),t._v(" 2. 连接器配置调优")]),t._v(" "),a("p",[t._v("Tomcat 连接器的配置调优也至关重要，尤其是对高并发、大量网络连接的处理。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("protocol")]),t._v("：选择合适的协议。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("HTTP/1.1")]),t._v("：适用于普通场景。")]),t._v(" "),a("li",[a("code",[t._v("org.apache.coyote.http11.Http11NioProtocol")]),t._v("：NIO 是非阻塞 I/O，适用于高并发场景，能够提高性能。")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("org.apache.coyote.http11.Http11NioProtocol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("connectionTimeout")]),t._v("：设置连接超时时间，默认值为 20000 毫秒（20 秒）。对于高并发场景，通常设置为较小的值，例如 5000 毫秒，以减少空闲连接的等待时间。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("connectionTimeout")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("5000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("keepAliveTimeout")]),t._v("：设置连接保持活动的超时时间。合理的 "),a("code",[t._v("keepAliveTimeout")]),t._v(" 可以减少新连接的创建开销，但如果设置过长可能会占用资源。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keepAliveTimeout")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("maxConnections")]),t._v("：设置连接器能够处理的最大连接数。对于 NIO 连接器，"),a("code",[t._v("maxConnections")]),t._v(" 可以控制同时处理的并发连接数量。适当增加此值可以处理更多的连接。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxConnections")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("2000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-jvm-和内存配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-jvm-和内存配置"}},[t._v("#")]),t._v(" 3. JVM 和内存配置")]),t._v(" "),a("p",[t._v("Tomcat 的性能高度依赖于 JVM 的配置，特别是在内存管理方面。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Heap 内存")]),t._v("：设置合适的堆内存大小 ("),a("code",[t._v("-Xms")]),t._v("、"),a("code",[t._v("-Xmx")]),t._v(")。Tomcat 的应用如果负载较高，建议适当增大堆内存以容纳更多对象。例如：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Xms2g")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Xmx4g")]),t._v("\n")])])]),a("p",[t._v("这里设置最小堆内存为 2GB，最大堆内存为 4GB。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Garbage Collection (GC) 调优")]),t._v("：选择合适的垃圾收集器对性能影响显著。")]),t._v(" "),a("ul",[a("li",[t._v("对于较低延迟需求的应用，使用 G1GC："),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XX:+UseG1GC")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("对于注重吞吐量的应用，可以考虑使用并行收集器："),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XX:+UseParallelGC")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Non-Heap 内存")]),t._v("（PermGen/Metaspace）：对较大规模的应用，需要调整 PermGen 或 Metaspace 的大小以避免类加载的内存不足：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XX:MetaspaceSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("256m "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XX:MaxMetaspaceSize")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("512m\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_4-http-压缩配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-http-压缩配置"}},[t._v("#")]),t._v(" 4. HTTP 压缩配置")]),t._v(" "),a("p",[t._v("HTTP 压缩可以减少响应的大小，从而减少网络传输时间，尤其适用于静态资源（如 HTML、CSS、JavaScript）比较多的应用。")]),t._v(" "),a("ul",[a("li",[t._v("启用 GZIP 压缩："),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("compression")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("compressionMinSize")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("2048"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("noCompressionUserAgents")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("gozilla, traviata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("compressableMimeType")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("compressionMinSize")]),t._v("：指定压缩的最小响应体大小。")]),t._v(" "),a("li",[a("code",[t._v("compressableMimeType")]),t._v("：指定哪些 MIME 类型的响应应该压缩。")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-资源优化和缓存设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-资源优化和缓存设置"}},[t._v("#")]),t._v(" 5. 资源优化和缓存设置")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("启用静态资源缓存")]),t._v("：对于静态资源，Tomcat 可以通过缓存来提高响应速度。\n"),a("ul",[a("li",[t._v("在 "),a("code",[t._v("Context")]),t._v(" 配置中启用缓存："),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Context")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("cachingAllowed")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("cacheMaxSize")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("cacheTTL")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("60000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("code",[t._v("cacheMaxSize")]),t._v("：设置缓存大小，以 KB 为单位。")]),t._v(" "),a("li",[a("code",[t._v("cacheTTL")]),t._v("：缓存的生命周期，单位是毫秒。")])])])]),t._v(" "),a("h3",{attrs:{id:"_6-数据库连接池调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-数据库连接池调优"}},[t._v("#")]),t._v(" 6. 数据库连接池调优")]),t._v(" "),a("p",[t._v("Tomcat 的应用通常与数据库交互频繁，使用数据库连接池来管理数据库连接可以有效提升性能。")]),t._v(" "),a("ul",[a("li",[t._v("使用连接池组件如 "),a("strong",[t._v("HikariCP")]),t._v(" 或 "),a("strong",[t._v("Tomcat JDBC Connection Pool")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("配置数据库连接池")]),t._v("：\n"),a("ul",[a("li",[t._v("设置合理的最小和最大连接数，保证在高并发下有足够的数据库连接可以使用。")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Resource")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("jdbc/MyDataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("auth")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("javax.sql.DataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxActive")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("100"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxIdle")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("30"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("minIdle")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxWait")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("maxActive")]),t._v("：最大连接数。")]),t._v(" "),a("li",[a("code",[t._v("maxWait")]),t._v("：当连接池耗尽时，最大等待时间。")])])])]),t._v(" "),a("h3",{attrs:{id:"_7-其他性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-其他性能优化"}},[t._v("#")]),t._v(" 7. 其他性能优化")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("减少 Context 切换")]),t._v("：通过合理配置 "),a("code",[t._v("maxThreads")]),t._v("，避免因为线程数过多导致 CPU 上下文切换频繁。")]),t._v(" "),a("li",[a("strong",[t._v("减少日志输出")]),t._v("：如果应用的日志量非常大，可能会影响性能。确保在生产环境中将日志级别降低（例如从 "),a("code",[t._v("DEBUG")]),t._v(" 降为 "),a("code",[t._v("INFO")]),t._v(" 或 "),a("code",[t._v("WARN")]),t._v("），并尽可能异步地写入日志。")]),t._v(" "),a("li",[a("strong",[t._v("Session 管理优化")]),t._v("：\n"),a("ul",[a("li",[t._v("使用 Cookie 而非 URL 重写来管理会话 ID，以减少负载。")]),t._v(" "),a("li",[t._v("对于大规模集群，可以考虑将 Session 存储在 Redis 或数据库中以便实现 Session 共享。")])])]),t._v(" "),a("li",[a("strong",[t._v("调优 Connector 的 Executor")]),t._v("：配置共享线程池：\n"),a("ul",[a("li",[t._v("使用 Executor 来共享线程池资源，避免每个 Connector 都维护独立的线程池。")])]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Executor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tomcatThreadPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("namePrefix")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("catalina-exec-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("maxThreads")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("minSpareThreads")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("50"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("executor")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("tomcatThreadPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("connectionTimeout")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("20000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("redirectPort")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8443"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_8-使用负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-使用负载均衡"}},[t._v("#")]),t._v(" 8. 使用负载均衡")]),t._v(" "),a("p",[t._v("当单个 Tomcat 实例无法处理所有流量时，可以通过负载均衡来扩展。使用 Nginx、HAProxy 等负载均衡器将请求分发到多个 Tomcat 实例，以提高系统的可用性和处理能力。")]),t._v(" "),a("h3",{attrs:{id:"_9-jvm-和-tomcat-的监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-jvm-和-tomcat-的监控"}},[t._v("#")]),t._v(" 9. JVM 和 Tomcat 的监控")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("JMX 和监控工具")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("启用 JMX 来监控 JVM 和 Tomcat 的性能指标，可以使用工具如 "),a("strong",[t._v("VisualVM")]),t._v(" 或 "),a("strong",[t._v("JConsole")]),t._v(" 监控内存使用、线程情况等。")]),t._v(" "),a("li",[t._v("配置 JMX 访问："),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dcom.sun.management.jmxremote")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dcom.sun.management.jmxremote.port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1099")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dcom.sun.management.jmxremote.authenticate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n"),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-Dcom.sun.management.jmxremote.ssl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false\n")])])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("监控指标")]),t._v("：使用 Prometheus 和 Grafana 这样的工具监控 JVM 指标（内存、GC、线程数）和 Tomcat 指标（请求数、响应时间、线程使用率）。")])])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("Tomcat 的调优是一个综合性工作，涉及线程池、连接管理、内存优化、HTTP 压缩、数据库连接池管理等多个方面。良好的调优能够显著提高 Tomcat 的处理性能和系统的响应能力。在调优的过程中，需要不断测试和监控，找到适合应用的最佳配置组合，以实现性能与资源利用之间的平衡。")])])}),[],!1,null,null,null);a.default=e.exports}}]);