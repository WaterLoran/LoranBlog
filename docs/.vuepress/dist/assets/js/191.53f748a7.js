(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{621:function(a,s,t){"use strict";t.r(s);var r=t(2),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[s("strong",[a._v("Arthas")]),a._v(" 是一个开源的 Java 诊断工具，功能非常强大，可以用于诊断和排查 Java 应用在运行中的各种问题。以下是 Arthas 的各项主要功能以及如何使用它们。")]),a._v(" "),s("h3",{attrs:{id:"_1-启动-arthas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-启动-arthas"}},[a._v("#")]),a._v(" 1. "),s("strong",[a._v("启动 Arthas")])]),a._v(" "),s("p",[a._v("首先要启动 Arthas，可以通过以下步骤进行：")]),a._v(" "),s("ol",[s("li",[s("p",[s("strong",[a._v("下载 Arthas")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" https://arthas.aliyun.com/arthas-boot.jar\n")])])])]),a._v(" "),s("li",[s("p",[s("strong",[a._v("启动 Arthas")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" arthas-boot.jar\n")])])]),s("p",[a._v("启动后，Arthas 会列出当前系统中所有正在运行的 Java 进程，你需要选择一个要诊断的进程 PID。")])])]),a._v(" "),s("h3",{attrs:{id:"_2-arthas-常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-arthas-常用命令"}},[a._v("#")]),a._v(" 2. "),s("strong",[a._v("Arthas 常用命令")])]),a._v(" "),s("ol",[s("li",[s("p",[s("strong",[s("code",[a._v("dashboard")]),a._v(" - 系统实时状态监控")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("dashboard")]),a._v(" 命令用于查看系统的整体运行状态，包括系统负载、内存使用、GC 情况、线程情况等。")]),a._v(" "),s("li",[s("strong",[a._v("使用方法")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("dashboard\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：通过它你可以获取应用的健康状态，帮助快速判断是否存在内存问题、CPU 问题等。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("thread")]),a._v(" - 查看线程信息")])]),a._v(" "),s("ul",[s("li",[a._v("用于查看当前 Java 应用的线程信息，可以用来分析高 CPU 使用的线程。")]),a._v(" "),s("li",[s("strong",[a._v("查看所有线程")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("thread\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("查看特定线程 ID")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("thread-id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("找出 CPU 消耗最高的线程")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("thread "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：可以帮助你定位高 CPU 使用的线程，查看线程的堆栈信息以及可能的死锁情况。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("jvm")]),a._v(" - 查看 JVM 信息")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("jvm")]),a._v(" 命令可以查看 JVM 的详细信息，比如内存、垃圾收集器、类加载信息等。")]),a._v(" "),s("li",[s("strong",[a._v("使用方法")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("jvm\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：帮助了解应用的 JVM 配置，是否内存配置合理等。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("heapdump")]),a._v(" - 导出 JVM 堆快照")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("heapdump")]),a._v(" 命令可以生成当前应用的堆内存快照，便于使用外部工具进行分析。")]),a._v(" "),s("li",[s("strong",[a._v("使用方法")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("heapdump\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：用于内存泄漏的排查，通过分析堆内存快照文件查找未释放的对象和内存泄漏的原因。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("profiler")]),a._v(" - CPU 性能采样")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("profiler")]),a._v(" 可以用于生成 CPU 性能火焰图。")]),a._v(" "),s("li",[s("strong",[a._v("开始采样")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("profiler start\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("停止采样并生成火焰图")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("profiler stop\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：非常直观地展示应用中哪些方法占用了最多的 CPU 资源，是性能分析的重要工具。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("monitor")]),a._v(" - 方法执行监控")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("monitor")]),a._v(" 用于监控某个类的方法执行情况，包括调用次数、耗时、失败次数等。")]),a._v(" "),s("li",[s("strong",[a._v("监控某个类的方法")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("monitor "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("method-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：可以帮助分析某个方法的性能瓶颈或调用频率，适合用来发现热点代码或经常失败的代码。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("trace")]),a._v(" - 方法调用链跟踪")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("trace")]),a._v(" 命令用于跟踪某个方法的调用链，可以查看调用路径、调用时间等信息。")]),a._v(" "),s("li",[s("strong",[a._v("跟踪某个类的某个方法")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("trace "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("method-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：适合用来分析复杂的业务逻辑，找出执行时间过长的代码段，帮助进行性能优化。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("watch")]),a._v(" - 动态监控方法的入参、返回值和异常")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("watch")]),a._v(" 可以用于动态地监控某个方法的输入参数、返回值和抛出的异常。")]),a._v(" "),s("li",[s("strong",[a._v("监控某个类的方法返回值")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("watch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("method-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" returnObj\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("监控异常")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("watch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("method-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" throwExp\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：适合用来调试，实时查看方法的参数和返回值，判断是否有异常数据。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("tt")]),a._v("（Time Tunnel） - 方法调用录制与回放")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("tt")]),a._v(" 命令类似于调试中的断点功能，它可以记录方法调用的详细信息，并支持回放。")]),a._v(" "),s("li",[s("strong",[a._v("记录某个方法的调用")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("tt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("method-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("回放某次方法调用")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("tt "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("index"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" replay\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：对于难以复现的问题，可以记录方法调用的每次数据并进行回放，方便问题的定位。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("jad")]),a._v(" - 反编译")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("jad")]),a._v(" 命令用于反编译某个类，方便查看当前加载的类的代码。")]),a._v(" "),s("li",[s("strong",[a._v("反编译某个类")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("jad "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：用于检查类加载后的代码是否符合预期，帮助排查生产环境中的代码问题。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("cls")]),a._v(" - 清除类缓存")])]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("清除缓存")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("cls\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：当你修改了某个类，并重新进行诊断时，可以用 "),s("code",[a._v("cls")]),a._v(" 来清除 Arthas 的类缓存，确保诊断使用最新的类信息。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("sc")]),a._v(" - 查看类加载信息")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("sc")]),a._v(" 用于查看某个类是否被加载、加载信息等。")]),a._v(" "),s("li",[s("strong",[a._v("查找某个类是否被加载")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("sc "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：帮助判断某个类是否被加载，特别是当遇到类加载冲突或加载失败时。")])])]),a._v(" "),s("li",[s("p",[s("strong",[s("code",[a._v("mc")]),a._v(" - 方法调用统计")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("mc")]),a._v(" 命令可以统计某个方法的调用次数、平均耗时等信息。")]),a._v(" "),s("li",[s("strong",[a._v("统计方法调用")]),a._v("："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mc")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("class-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("method-name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])])]),a._v(" "),s("li",[s("strong",[a._v("作用")]),a._v("：用于查看某个方法是否被频繁调用，以及其性能数据。")])])])]),a._v(" "),s("h3",{attrs:{id:"_3-退出-arthas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-退出-arthas"}},[a._v("#")]),a._v(" 3. "),s("strong",[a._v("退出 Arthas")])]),a._v(" "),s("ul",[s("li",[a._v("要退出 Arthas，可以直接输入："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("quit\n")])])])]),a._v(" "),s("li",[a._v("或者使用快捷键："),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("Ctrl + C\n")])])])])]),a._v(" "),s("h3",{attrs:{id:"_4-示例应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-示例应用场景"}},[a._v("#")]),a._v(" 4. "),s("strong",[a._v("示例应用场景")])]),a._v(" "),s("ol",[s("li",[s("strong",[a._v("性能问题分析")]),a._v("：如果应用的 CPU 使用率很高，可以使用 "),s("code",[a._v("thread")]),a._v(" 找到消耗 CPU 最多的线程，再结合 "),s("code",[a._v("trace")]),a._v(" 和 "),s("code",[a._v("profiler")]),a._v(" 来找出方法的执行情况。")]),a._v(" "),s("li",[s("strong",[a._v("方法调用跟踪")]),a._v("：如果某个接口调用非常慢，可以使用 "),s("code",[a._v("trace")]),a._v(" 来跟踪调用链，了解每个子方法的耗时，从而找出性能瓶颈。")]),a._v(" "),s("li",[s("strong",[a._v("内存问题排查")]),a._v("：如果内存消耗不断增加，可以使用 "),s("code",[a._v("heapdump")]),a._v(" 导出堆内存快照，使用 "),s("code",[a._v("sc")]),a._v(" 来查看某些类是否有不合理的加载。")])]),a._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("Arthas 提供了丰富的功能，帮助开发者和运维人员在应用运行时进行深度的诊断和排查。通过这些工具，你可以有效地分析和解决性能问题、内存问题以及方法调用问题等，提高系统的稳定性和性能。使用 Arthas 时，请注意合理使用采样时间和分析频率，以避免对生产环境造成过大影响。")])])}),[],!1,null,null,null);s.default=e.exports}}]);